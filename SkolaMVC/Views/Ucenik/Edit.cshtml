@model SkolaMVC.Models.UcenikViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var Pols = ViewBag.Pol;
    var Odjeljenja = ViewBag.Odjeljenja;
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Ucenik", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>UcenikViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Hidden("UcenikId")
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Ime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Prezime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Prezime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Prezime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pol, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @foreach (var it in Pols as List<String>)
            {
                if (Model.Pol == it)
                {
                    <label>@Html.RadioButton("Pol", @it, true) @it  </label>
                }
                else
                {
                    <label>@Html.RadioButton("Pol", @it, false) @it  </label>
                }
                //dejo rijesio label
                <br />
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JMBG, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JMBG, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JMBG, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Adresa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Adresa, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Adresa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Drzava", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Drzava", ViewBag.Drzave as List<SelectListItem>, new { @class = "form-control" })

        </div>
    </div>

    <div class="form-group">
        @Html.Label("GradId", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("GradId", new List<SelectListItem> { new SelectListItem() { Text = "Izaberi grad", Value = "-1" } }, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DatumRodjenja, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DatumRodjenja, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DatumRodjenja, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImeRoditelja, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ImeRoditelja, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImeRoditelja, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BrojUDnevniku, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BrojUDnevniku, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BrojUDnevniku, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Drzavljanstvo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Drzavljanstvo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Drzavljanstvo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OdjeljenjeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Odjeljenje, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Odjeljenje, "", new { @class = "text-danger" })*@
            @* @Html.DropDownList("OdjeljenjeId", new SelectList((Odjeljenja as List<SkolaMVC.Models.OdjeljenjeViewModel>).Select(o => o.OdjeljenjeId)), new { @class = "form-control" })*@
            @Html.DropDownList("OdjeljenjeId", Odjeljenja as List<SelectListItem>, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/bundles/jquery")

    <script src="~/Scripts/App/vratiGradove.js"></script>
}


